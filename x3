import os
import pandas as pd
import pyarrow.parquet as pq

# Folder containing the Parquet files
input_folder = "apple"
output_file = "merged_output.parquet"

def merge_parquet_files(input_folder, output_file):
    # List all Parquet files in the input folder
    parquet_files = [os.path.join(input_folder, f) for f in os.listdir(input_folder) if f.endswith(".parquet")]
    
    if not parquet_files:
        raise ValueError("No Parquet files found in the specified folder.")

    # Use an iterator to process files one by one to conserve memory
    merged_table = None

    for file in parquet_files:
        # Read the Parquet file as a PyArrow table
        table = pq.read_table(file)

        if merged_table is None:
            # Initialize the merged_table with the first file's data
            merged_table = table
        else:
            # Concatenate tables while avoiding loading all data into memory
            merged_table = pq.concat_tables([merged_table, table])
    
    # Write the merged table to a single Parquet file
    pq.write_table(merged_table, output_file)
    print(f"Successfully merged {len(parquet_files)} files into {output_file}")

# Execute the function
merge_parquet_files(input_folder, output_file)
