import os
import geopandas as gpd
import pandas as pd
from pathlib import Path

# Input folder containing GeoParquet files
input_folder = "input_folder"
# Output temporary folder
out_temp = "out_temp"
# Shapefile for USA
usa_shp = "usa.shp"

# Ensure the out_temp directory exists
os.makedirs(out_temp, exist_ok=True)

# Load the USA shapefile
usa = gpd.read_file(usa_shp)

# Process each GeoParquet file in the input folder
for file in Path(input_folder).glob("*.parquet"):
    # Read the GeoParquet file
    gdf = gpd.read_parquet(file)
    
    # Check for intersection with the USA shapefile
    intersected_gdf = gdf[gdf.intersects(usa.unary_union)]
    
    # If there are intersected features, write to the out_temp folder
    if not intersected_gdf.empty:
        output_file = os.path.join(out_temp, file.name)
        intersected_gdf.to_parquet(output_file)

# Combine all intersected features from out_temp folder into a single GeoParquet file
all_gdfs = []
for file in Path(out_temp).glob("*.parquet"):
    all_gdfs.append(gpd.read_parquet(file))

# Combine all GeoDataFrames in a memory-efficient way
if all_gdfs:
    combined_gdf = gpd.GeoDataFrame(pd.concat(all_gdfs, ignore_index=True), crs=all_gdfs[0].crs)
    # Write the combined data to a single output file
    combined_gdf.to_parquet("combined_output.parquet")
else:
    print("No intersected features found.")
