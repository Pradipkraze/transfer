import geopandas as gpd
from shapely.geometry import Polygon
import os

# Paths
data_folder = "overture"
usa_shapefile = "usa.shp"
output_parquet = "overlapping_polygons.parquet"

# Read the USA shapefile
usa_gdf = gpd.read_file(usa_shapefile)
usa_boundary = usa_gdf.unary_union  # Combine all shapes into a single geometry

# Initialize an empty GeoDataFrame for writing
schema_gdf = gpd.GeoDataFrame(columns=['geometry'], geometry='geometry', crs=usa_gdf.crs)
if not os.path.exists(output_parquet):
    schema_gdf.to_parquet(output_parquet)

# Process GeoParquet files in the folder
for file_name in os.listdir(data_folder):
    if file_name.endswith(".parquet"):
        file_path = os.path.join(data_folder, file_name)

        # Read file in chunks to limit memory usage
        for chunk in gpd.read_file(file_path, chunksize=100000):
            # Check for overlap
            overlapping = chunk[chunk.intersects(usa_boundary)]
            
            # Append overlapping polygons to the output Parquet file
            if not overlapping.empty:
                overlapping.to_parquet(output_parquet, engine='pyarrow', compression='snappy', append=True)
