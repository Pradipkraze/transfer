import geopandas as gpd
import os
import pyarrow.parquet as pq
import pyarrow as pa

def process_geoparquet_files(overture_folder, usa_shapefile, output_file):
    """
    Processes GeoParquet files, checks for overlaps with a USA shapefile,
    and writes overlapping polygons to a Parquet file. Optimized for memory usage.

    Args:
        overture_folder: Path to the folder containing GeoParquet files.
        usa_shapefile: Path to the USA shapefile.
        output_file: Path to the output Parquet file.
    """

    try:
        usa = gpd.read_file(usa_shapefile)
        # Project USA to a suitable CRS for accurate intersection checks (e.g., a US-focused projected CRS)
        usa = usa.to_crs("EPSG:5070") # Example: US National Atlas Equal Area

    except Exception as e:
        print(f"Error reading USA shapefile: {e}")
        return

    first_overlap = True # Flag for creating the output file
    output_table = None

    for filename in os.listdir(overture_folder):
        if filename.endswith(".parquet"):
            filepath = os.path.join(overture_folder, filename)
            print(f"Processing: {filepath}")

            try:
                # Use pyarrow for memory-efficient reading of GeoParquet
                table = pq.read_table(filepath)
                gdf = gpd.GeoDataFrame(table)

                # Project the GeoDataFrame to the same CRS as the USA shapefile
                gdf = gdf.to_crs(usa.crs)

                # Efficiently find overlaps using sjoin (spatial join)
                overlapping = gpd.sjoin(gdf, usa, how='inner', predicate='intersects')

                if not overlapping.empty:
                    # Convert to pyarrow table for efficient appending.
                    overlapping_table = pa.Table.from_pandas(overlapping)

                    if first_overlap:
                        output_table = overlapping_table
                        first_overlap = False
                    else:
                        output_table = pa.concat_tables([output_table, overlapping_table])

                # Explicitly delete large objects to free memory ASAP
                del gdf, table, overlapping,overlapping_table
            except Exception as e:
                print(f"Error processing {filepath}: {e}")
                continue

    if output_table:
        try:
          pq.write_table(output_table, output_file)
          print(f"Overlapping polygons written to: {output_file}")
        except Exception as e:
            print(f"Error writing output file: {e}")
        finally:
            del output_table # Explicitly delete after writing.
    else:
        print("No overlapping polygons found.")

# Example Usage
overture_folder = "overture"  # Replace with your folder path
usa_shapefile = "data_folder/usa.shp"  # Replace with your shapefile path
output_file = "overlapping_polygons.parquet"

process_geoparquet_files(overture_folder, usa_shapefile, output_file)
